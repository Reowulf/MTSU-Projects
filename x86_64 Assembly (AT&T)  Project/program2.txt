JMP start

; Variables
var1: A9
var2: 2B
var3: AF
var4: D1
var5: 0
var6: 0
var7: 0
var8: 0
var9: 0
var10: 0
var11: 0

start:
LDAC var1	; loads A9
MVAC		; moves A9 to R
LDAC var2	; loads 2B
ADD		; adds A9 and 2B
OUT		; outputs results
STAC var5	; stores results in var5
CLAC		; clears acc

LDAC var2	; loads 2B
MVAC		; moves 2B to R 
LDAC var1	; loads A9
SUB		; subs 2B from A9
OUT		; outputs results
STAC var6	; stores results in var6
CLAC		; clears acc

LDAC var2	; loads 2B
MVAC		; moves 2B to R
LDAC var1	; loads A9
AND		; ands together 2B & A9
OUT		; outputs results
STAC var7	; stores results in var7
CLAC		; clears acc

LDAC var2	; loads 2B
MVAC		; moves 2B to R
LDAC var1	; loads A9
OR		; ors together 2B & A9
OUT		; outputs results
STAC var8	; stores results in var8
CLAC		; clears acc

LDAC var1	; loads A9
ASHR		; right shift
OUT		; outputs results
STAC var9   	; stores results into var9
CLAC		; clears acc

LDAC var3	; loads AF
INC		; increments AF
OUT		; outputs results
STAC var10	; stores results in var10
CLAC		; clears ACC

LDAC var4	; loads D1
NOT		; !D1 in ACC
OUT		; outputs results
STAC var11	; stores results in var11
CLAC		; clears acc

MOVR		; moves R to ACC
CLAC		; clears acc

HALT		; ends program